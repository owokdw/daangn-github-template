name: Build Docker, Push ECR, and Deploy hoian-eks

# you should update env vars
env:
  STAGE: alpha
  COUNTRY: kr
  PROJECT: keyword

  DOCKERFILE_PATH: .
  DOCKERBUILD_OPTS: # something like --build-arg GITHUB_TOKEN=${{ secrets.ORG_GITHUB_READ_TOKEN }} # 필요 없을 경우 삭제
  AWS_ECR_REPO: keyword
  AWS_REGION: ap-northeast-2

  # n42 계정에 배포할 경우
  AWS_ACCESS_KEY_ID: ${{ secrets.ORG_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.ORG_AWS_SECRET_ACCESS_KEY }}
  # karrot-alpha 계정에 배포할 경우
#   AWS_ACCESS_KEY_ID: ${{ secrets.ORG_AWS_ACCESS_KEY_ID_ALPHA }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.ORG_AWS_SECRET_ACCESS_KEY_ALPHA }}

  K8S_IMAGE_NAME: keyword # kustomize.yml 에 정의한 image name
  K8S_REPO_BRANCH: release/alpha # hoian-eks 브랜치 이름
  K8S_PROJECT_PATH: alpha/ap-northeast-2/keyword # hoian-eks kustomize.yml 경로

on:
  push:
    tags: # choose one
      - v[0-9]+.[0-9]+.[0-9]+
#       - v[0-9]+.[0-9]+.[0-9]+-alpha.*
#     branches:
#       - release/prod
#       - release/alpha

jobs:
  build-and-push:
    runs-on: [ self-hosted, linux, x64 ]
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        id: get-version
        env:
          REF: ${{ github.ref }}
          SHA: ${{ github.sha }}
        run: |
          [[ $REF == refs/tags/* ]] && \
          echo "::set-output name=version::${REF#"refs/tags/"}" || \
          echo "::set-output name=version::${SHA}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.ORG_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_HUB_PASSWORD }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.get-version.outputs.version }}
        run: |
          docker build --pull $DOCKERBUILD_OPTS -t $ECR_REGISTRY/$AWS_ECR_REPO:$IMAGE_TAG $DOCKERFILE_PATH
          docker push $ECR_REGISTRY/$AWS_ECR_REPO:$IMAGE_TAG

      - name: Setup Kustomization
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          chmod +x kustomize && sudo mv kustomize /usr/bin

      - name: Get Actor Email
        id: get-email
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.ORG_DEPLOY_TOKEN }}
          result-encoding: string
          script: |
            const { data } = await github.users.getByUsername({
              username: context.actor,
            })
            return data.email

      - uses: actions/checkout@v2
        name: Checkout hoian-eks
        with:
          repository: daangn/hoian-eks
          token: ${{ secrets.ORG_DEPLOY_TOKEN }}
          ref: ${{ env.K8S_REPO_BRANCH }}

      - name: Apply New Version
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
          ACTOR_NAME: ${{ github.actor }}
          ACTOR_EMAIL: ${{ steps.get-email.outputs.result }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          git config user.name "$ACTOR_NAME"
          git config user.email "$ACTOR_EMAIL"
          cd $K8S_PROJECT_PATH
          kustomize edit set image $K8S_IMAGE_NAME=$ECR_REGISTRY/$AWS_ECR_REPO:$VERSION
          git add .
          git commit -m "ci($STAGE/$COUNTRY/$PROJECT): update version $VERSION"
          git pull --rebase origin $K8S_REPO_BRANCH && git push origin $K8S_REPO_BRANCH
